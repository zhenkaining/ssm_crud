<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:component-scan base-package="com.candy">
        <!-- 不扫描控制器-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- Spring 的配置文件，这里主要配置和业务逻辑有关的-->
    <!-- 数据源，事务控制等等-->
    <context:property-placeholder location="classpath:dbconfig.properties"></context:property-placeholder>
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- 配置和MyBatis的整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定MyBatis全局配置文件的位置-->
        <property name="configLocation" value="classpath:myBatis-config.xml"></property>
        <property name="dataSource" ref="pooledDataSource"></property>
        <!-- 指定mybatis的mapper文件的位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>

    </bean>

    <!--配置扫描器，将mybatis接口的实现加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有dao接口的实现，加入到ioc容器-->
        <property name="basePackage" value="com.candy.crud.dao"></property>
    </bean>


    <!-- 配置sqlSession-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>

    <!-- 事务控制的配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 数据源-->
        <property name="dataSource" ref="pooledDataSource"></property>

    </bean>

    <!--&lt;!&ndash; 开启基于注解的事物，也可以使用xml配置的形式（比较重要的使用配置式）&ndash;&gt;-->
    <!--<aop:config>-->
    <!--&lt;!&ndash; 配置事物切入点&ndash;&gt;-->
    <!--<aop:pointcut id="txPoint" expression="execution(* com.candy.crud.service..*(..))"></aop:pointcut>-->
    <!--&lt;!&ndash; 配置事务增强 &ndash;&gt;-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>-->
    <!--</aop:config>-->
    <!--&lt;!&ndash;配置事务增强，事务如何切入  &ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--&lt;!&ndash; 所有方法都是事务方法 &ndash;&gt;-->
    <!--<tx:method name="*"/>-->
    <!--&lt;!&ndash;以get开始的所有方法  &ndash;&gt;-->
    <!--<tx:method name="get*" read-only="true"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->
</beans>